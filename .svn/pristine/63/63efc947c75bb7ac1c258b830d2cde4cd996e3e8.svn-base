package com.hust.iprai;

import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

public class DBManager {

    private MyDBHelper mDbHelper;

    public DBManager(Context context) {
        mDbHelper = new MyDBHelper(context);
    }

    /**
     * 指定的url是否在数据库中已经有记录
     * 
     * @param url
     * @return
     */
    public boolean hasRecord(String url) {
        SQLiteDatabase db = mDbHelper.getReadableDatabase();
        String sql = "select count(*) from download_info where url=?";
        Cursor cursor = db.rawQuery(sql, new String[] { url });
        cursor.moveToFirst();
        int count = cursor.getInt(0);
        cursor.close();
        return count == 0;
    }

    /**
     * 添加下载信息
     * 
     * @param infos
     */
    public void saveInfos(List<DownloadInfo> infos) {
        SQLiteDatabase db = mDbHelper.getWritableDatabase();
        String sql = "insert into download_info(thread_id, start_pos, end_pos, complete_size, file_size, url) values(?,?,?,?,?,?)";
        for (DownloadInfo info : infos) {
            Object[] bindArgs = { info.mThreadId, info.mStartPos, info.mEndPos,
                    info.mCompleteSize, info.mFileSize, info.mUrl };
            db.execSQL(sql, bindArgs);
        }
    }

    /**
     * 读取数据
     * 
     * @param url
     * @return
     */
    public List<DownloadInfo> getInfos(String url) {
        List<DownloadInfo> list = new ArrayList<DownloadInfo>();
        SQLiteDatabase db = mDbHelper.getReadableDatabase();
        String sql = "select thread_id, start_pos, end_pos, complete_size, file_size, url from download_info where url=?";
        Cursor cursor = db.rawQuery(sql, new String[] { url });
        while (cursor.moveToNext()) {
            DownloadInfo info = new DownloadInfo(cursor.getInt(0),
                    cursor.getInt(1), cursor.getInt(2), cursor.getInt(3),
                    cursor.getInt(4), cursor.getString(5));
            list.add(info);
        }
        cursor.close();
        return list;
    }

    /**
     * 更新部分数据
     * 
     * @param threadId
     * @param completeSize
     * @param url
     */
    public void updateInfos(int threadId, int completeSize, String url) {
        SQLiteDatabase db = mDbHelper.getReadableDatabase();
        String sql = "update download_info set complete_size=? where thread_id=? and url=?";
        Object[] bindArgs = { completeSize, threadId, url };
        db.execSQL(sql, bindArgs);
    }

    public void closeDb() {
        mDbHelper.close();
    }

    public void delete(String url) {
        SQLiteDatabase db = mDbHelper.getReadableDatabase();
        db.delete("download_info", "url=?", new String[] { url });
        db.close();
    }

}
